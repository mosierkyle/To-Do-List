(()=>{"use strict";class t{constructor(t){this.name=t,this.toDos=[]}addItem(t){this.toDos.push(t)}removeItem(t){let e=this.toDos.indexOf(t);console.log(e),this.toDos.splice(e,1)}changeName(t){this.name=t}}const e=(()=>{const t=[];return{projectList:t,addItem:e=>{t.push(e)},deleteItem:e=>{let s=t.indexOf(e);t.splice(s,1)}}})(),s=(()=>{const t=[];return{lists:t,addItem:e=>{t.push(e)}}})(),o=new t("home"),i=new t("today"),h=new t("week");s.addItem(o),s.addItem(h),s.addItem(i);const a=new t("school"),n=new t("gym");e.addItem(a),e.addItem(n);new class{constructor(t,e,s,o,i=!1){this.name=t,this.dueDate=e,this.priority=s,this.hasProject=i,this.project=o}getName(){return this.name}changeName(t){this.name=t}changeDueDate(t){this.dueDate=t}changePriority(t){this.priority=t}getLists(){return((t,e,o)=>{const i=[];return i.push(s.lists[0]),!0===e&&i.push(o),i.push(s.lists[1]),i})(0,this.hasProject,this.project)}addTo(){return((t,e)=>{this.getLists().forEach((e=>{e.addItem(t)}))})(this)}}("take trash out",7,"medium",a,!0).addTo(),console.log(s.lists[0]),console.log(s.lists[1]),console.log(e.projectList[0])})();